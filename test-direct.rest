### Arquivo para testar os microservices individualmente ###

# ============================================
# 1. ORGANIZATION-SERVICE (Porta 8081)
#    - Criar entidades básicas: Location, Site, Rack
# ============================================
@baseUrlOrg = http://localhost:8081/api

### 1.1 Criar Location 1
POST {{baseUrlOrg}}/organization/locations
Content-Type: application/json

{
    "name": "Data Center Principal - Joinville",
    "address": "Rua das Máquinas, 123, Joinville"
}

### 1.2 Criar Location 2 (Opcional, para testar)
POST {{baseUrlOrg}}/organization/locations
Content-Type: application/json

{
    "name": "Escritório Central - São Paulo",
    "address": "Av. Paulista, 1000, São Paulo"
}

### 1.3 Criar Site 1 (Associado à Location 1)
POST {{baseUrlOrg}}/organization/sites
Content-Type: application/json

{
    "name": "JVE-MATRIZ-01",
    "location": {
        "id": 1
        // Assume que a primeira Location criada recebeu ID 1
        // Se você reiniciar os serviços, o ID pode mudar!
    }
}

### 1.4 Criar Rack 1 (Associado ao Site 1)
POST {{baseUrlOrg}}/racks
Content-Type: application/json

{
    "name": "RACK-A01",
    "uHeight": 42,
    "site": {
        "id": 1
        // Assume que o primeiro Site criado recebeu ID 1
    }
}

### 1.5 Consultar todas Locations (Verificar criação)
GET {{baseUrlOrg}}/organization/locations

### 1.6 Consultar todos Sites (Verificar criação)
GET {{baseUrlOrg}}/organization/sites

### 1.7 Consultar todos Racks (Verificar criação)
GET {{baseUrlOrg}}/racks


# ============================================
# 2. INVENTORY-SERVICE (Porta 8082)
#    - Criar Manufacturer, DeviceModel e Device
#    - Depende do organization-service rodando para validar IDs
# ============================================
@baseUrlInv = http://localhost:8082/api

### 2.1 Criar Fabricante 1
POST {{baseUrlInv}}/manufacturers
Content-Type: application/json

{
    "name": "Cisco"
}

### 2.2 Criar Fabricante 2 (Opcional)
POST {{baseUrlInv}}/manufacturers
Content-Type: application/json

{
    "name": "Juniper"
}


### 2.3 Criar Modelo de Dispositivo 1 (Associado ao Fabricante 1)
POST {{baseUrlInv}}/device-models
Content-Type: application/json

{
    "name": "Catalyst 9300",
    "manufacturer": {
      "id": 1
      // Assume que o primeiro Fabricante recebeu ID 1
    }
}

### 2.4 Criar Dispositivo 1
#   -> Requer que organization-service (porta 8081) esteja rodando!
#   -> Usa IDs criados nos passos 1.3 (Site) e 1.4 (Rack)
POST {{baseUrlInv}}/devices
Content-Type: application/json

{
    "name": "SW-CORE-JVE-01",
    "deviceModel": {
        "id": 1 // Assume ID 1 para o DeviceModel criado
    },
    "position": 20,
    "siteId": 1,   // ID do Site criado no passo 1.3
    "rackId": 1    // ID do Rack criado no passo 1.4
}

### 2.5 Consultar todos Fabricantes
GET {{baseUrlInv}}/manufacturers

### 2.6 Consultar todos Modelos
GET {{baseUrlInv}}/device-models

### 2.7 Consultar todos Dispositivos
GET {{baseUrlInv}}/devices

### 2.8 Consultar Dispositivos do Site 1
#   -> Requer que organization-service (porta 8081) esteja rodando!
GET {{baseUrlInv}}/sites/1/devices


# ============================================
# 3. INFRASTRUCTURE-SERVICE (Porta 8083)
#    - Criar Vlan
#    - Depende do organization-service rodando para validar ID do Site
# ============================================
@baseUrlInfra = http://localhost:8083/api

### 3.1 Criar VLAN 1
#   -> Requer que organization-service (porta 8081) esteja rodando!
#   -> Usa ID do Site criado no passo 1.3
POST {{baseUrlInfra}}/vlans
Content-Type: application/json

{
    "name": "VLAN-SERVIDORES-PROD-JVE",
    "vlanId": 10,
    "siteId": 1 // ID do Site criado no passo 1.3
}

### 3.2 Consultar todas VLANs
GET {{baseUrlInfra}}/vlans